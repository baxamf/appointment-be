# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type UserProfile {
  id: Int!
  firstName: String!
  lastName: String
  phone: String!
  avatar: String
  bio: String
}

type UserSocial {
  id: Int!
  userId: Int!
  title: String!
  link: String!
  order: Int!
}

type UserResponse {
  id: Int!
  email: String!
  role: UserRole!
  createdAt: DateTime!
  profile: UserProfile
  socials: [UserSocial!]
}

"""User roles"""
enum UserRole {
  ADMIN
  STAFF
  USER
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type Auth {
  """jwt access token"""
  accessToken: String!

  """user"""
  user: UserResponse!
}

type MessageResponse {
  """Response message"""
  message: String!
}

type ServiceTag {
  id: Int!
  title: String!
}

type StaffService {
  id: Int!
  userId: Int!
  serviceId: Int!
  title: String
  description: String
  price: Int
  duration: Int!
  order: Int!
  user: UserResponse!
  service: CompanyService!
  tags: [ServiceTag!]
}

type CompanyService {
  id: Int!
  title: String!
  description: String!
  image: String!
  order: Int!
  staffServices: [StaffService!]
  tags: [ServiceTag!]
}

type Appointment {
  id: Int!
  status: AppointmentStatus!
  staffServiceId: Int!
  customerId: Int!
  staffId: Int!
  targetTime: DateTime!
  description: String
  images: [String!]
  createdAt: DateTime!
  staffService: StaffService!
  customer: UserResponse!
  staff: UserResponse!
}

"""Appointment statuses"""
enum AppointmentStatus {
  PENDING
  FINISHED
  CANCELLED
}

type Query {
  """Refresh access token"""
  refresh: Auth!

  """Logout user"""
  logout: MessageResponse!

  """Get user by id"""
  getUser(userId: Int!): UserResponse!

  """Get my user data"""
  getMe: UserResponse!
  getCompanyServices: [CompanyService!]!
  getCompanyService(companyServiceId: Int!): CompanyService!
  getStaffServices: [StaffService!]!
  getStaffService(staffServiceId: Int!): StaffService!
  getServiceTags: [ServiceTag!]!
  getServiceTag(serviceTagId: Int!): ServiceTag!

  """Get my appointments"""
  getMyAppointments: [Appointment!]!

  """Get staff appointments"""
  getStaffAppointments(staffUserId: Int!): [Appointment!]!
}

type Mutation {
  """Login user"""
  login(loginInput: LoginInput!): Auth!
  createUser(createUserInput: CreateUserInput!): UserResponse!
  createMyProfile(createUserProfileInput: CreateUserProfileInput!): UserProfile!
  updateMyProfile(updateUserProfileInput: UpdateUserProfileInput!): UserProfile!
  createMySocial(createUserSocialInput: CreateUserSocialInput!): UserSocial!
  updateMySocial(updateUserSocialInput: UpdateUserSocialInput!): UserSocial!
  removeMySocial(socialId: Int!): UserSocial!
  createCompanyService(createCompanyServiceInput: CreateCompanyServiceInput!): CompanyService!
  updateCompanyService(updateCompanyServiceInput: UpdateCompanyServiceInput!): CompanyService!
  removeCompanyService(companyServiceId: Int!): CompanyService!
  createStaffService(createStaffServiceInput: CreateStaffServiceInput!): StaffService!
  updateStaffService(updateServiceInput: UpdateStaffServiceInput!): StaffService!
  removeStaffService(staffServiceId: Int!): StaffService!
  createServiceTag(createServiceTagInput: CreateServiceTagInput!): ServiceTag!
  updateServiceTag(updateServiceTagInput: UpdateServiceTagInput!): ServiceTag!
  removeServiceTag(serviceTagId: Int!): ServiceTag!
  createAppointment(createAppointmentInput: CreateAppointmentInput!): Appointment!
  cancelAppointment(appointmentId: Int!): Appointment!
  updateAppointment(updateAppointmentInput: UpdateAppointmentInput!): Appointment!
}

input LoginInput {
  """user email"""
  email: String!

  """user password"""
  password: String!
}

input CreateUserInput {
  email: String!
  password: String!
  role: UserRole
}

input CreateUserProfileInput {
  firstName: String!
  lastName: String
  phone: String!
  avatar: String
  bio: String
}

input UpdateUserProfileInput {
  firstName: String
  lastName: String
  phone: String
  avatar: String
  bio: String
}

input CreateUserSocialInput {
  title: String!
  link: String!
  order: Int
}

input UpdateUserSocialInput {
  title: String
  link: String
  order: Int
  id: Int!
}

input CreateCompanyServiceInput {
  title: String!
  description: String!
  image: String!
  order: Int
}

input UpdateCompanyServiceInput {
  title: String
  description: String
  image: String
  order: Int
  id: Int!
}

input CreateStaffServiceInput {
  id: Int
  serviceId: Int!
  title: String
  description: String
  price: Int

  """Service duration in minutes"""
  duration: Int!
  order: Int
}

input UpdateStaffServiceInput {
  id: Int!
  serviceId: Int
  title: String
  description: String
  price: Int

  """Service duration in minutes"""
  duration: Int
  order: Int
}

input CreateServiceTagInput {
  title: String!
}

input UpdateServiceTagInput {
  title: String
  id: Int!
}

input CreateAppointmentInput {
  staffServiceId: Int!
  customerId: Int!
  staffId: Int!
  targetTime: DateTime!
  description: String
  images: [String!]
}

input UpdateAppointmentInput {
  staffServiceId: Int
  customerId: Int
  staffId: Int
  targetTime: DateTime
  description: String
  images: [String!]
  id: Int!
}